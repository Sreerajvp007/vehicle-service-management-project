<div class="container mt-4">
  <h1 class="mb-4">Workshops</h1>

  <!-- Add button -->
  <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addWorkshopModal">
    Add Workshop
  </button>

  <!-- Responsive table -->
  <div class="table-responsive d-none d-md-block">
    <table class="table table-bordered align-middle">
      <thead class="table-light">
        <tr>
          <th>Name</th>
          <th>Owner</th>
          <th>Email</th>
          <th>City</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% if (workshopList && workshopList.length > 0) { %>
          <% workshopList.forEach(workshop => { %>
            <tr>
              <td><%= workshop.name %></td>
              <td><%= workshop.ownername %></td>
              <td><%= workshop.email %></td>
              <td><%= workshop.city %></td>
              <td>
  <div class="action-buttons">
    <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editWorkshopModal"
      data-id="<%= workshop._id %>" data-name="<%= workshop.name %>"
      data-ownername="<%= workshop.ownername %>" data-email="<%= workshop.email %>"
      data-city="<%= workshop.city %>" data-state="<%= workshop.state %>" data-phone="<%= workshop.phone %>">
      Edit
    </button>

    <button class="btn btn-sm btn-danger" onclick="deleteWorkshop('<%= workshop._id %>')">
      Delete
    </button>

    <% if (workshop.status == "blocked") { %>
      <button class="btn btn-sm btn-success toggle-block-btn" data-id="<%= workshop._id %>"
        data-status="approve">
        Unblock
      </button>
    <% } else { %>
      <button class="btn btn-sm btn-secondary toggle-block-btn" data-id="<%= workshop._id %>"
        data-status="block">
        Block
      </button>
    <% } %>
  </div>
</td>

            </tr>
          <% }) %>
        <% } else { %>
          <tr>
            <td colspan="5" class="text-center">No workshops found</td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>

  <!-- Mobile Card View -->
  <div class="d-md-none">
    <% if (workshopList && workshopList.length > 0) { %>
      <% workshopList.forEach(workshop => { %>
        <div class="card mb-3 shadow-sm">
          <div class="card-body">
            <h5 class="card-title"><%= workshop.name %></h5>
            <p class="mb-1"><strong>Owner:</strong> <%= workshop.ownername %></p>
            <p class="mb-1"><strong>Email:</strong> <%= workshop.email %></p>
            <p class="mb-1"><strong>City:</strong> <%= workshop.city %></p>
            <div class="mt-2">
              <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editWorkshopModal"
                data-id="<%= workshop._id %>" data-name="<%= workshop.name %>"
                data-ownername="<%= workshop.ownername %>" data-email="<%= workshop.email %>"
                data-city="<%= workshop.city %>" data-state="<%= workshop.state %>" data-phone="<%= workshop.phone %>">
                Edit
              </button>
              <button class="btn btn-sm btn-danger" onclick="deleteWorkshop('<%= workshop._id %>')">
                Delete
              </button>
              <% if (workshop.status == "blocked") { %>
                <button class="btn btn-sm btn-success toggle-block-btn" data-id="<%= workshop._id %>"
                  data-status="approve">
                  Unblock
                </button>
              <% } else { %>
                <button class="btn btn-sm btn-secondary toggle-block-btn" data-id="<%= workshop._id %>"
                  data-status="block">
                  Block
                </button>
              <% } %>
            </div>
          </div>
        </div>
      <% }) %>
    <% } else { %>
      <p class="text-center">No workshops found</p>
    <% } %>
  </div>
</div>


<!-- ADD Modal -->
<div class="modal fade" id="addWorkshopModal" tabindex="-1" aria-labelledby="addWorkshopLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <form id="addWorkshopForm">
        <div class="modal-header">
          <h5 class="modal-title" id="addWorkshopLabel">Add New Workshop</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <div class="row g-3">
            <div class="col-md-6">
              <label for="name" class="form-label">Workshop Name</label>
              <input type="text" class="form-control" id="name" name="name" required />
            </div>
            <div class="col-md-6">
              <label for="ownername" class="form-label">Owner Name</label>
              <input type="text" class="form-control" id="ownername" name="ownername" required />
            </div>
            <div class="col-md-6">
              <label for="email" class="form-label">Owner Email</label>
              <input type="email" class="form-control" id="email" name="email" required />
            </div>
            <div class="col-md-6">
              <label for="password" class="form-label">Owner Password</label>
              <input type="password" class="form-control" id="password" name="password" required />
            </div>
            <div class="col-md-6">
              <label for="city" class="form-label">City</label>
              <input type="text" class="form-control" id="city" name="city" required />
            </div>
            <div class="col-md-6">
              <label for="state" class="form-label">State</label>
              <input type="text" class="form-control" id="state" name="state" required />
            </div>
            <div class="col-md-6">
              <label for="phone" class="form-label">Phone</label>
              <input type="tel" class="form-control" id="phone" name="phone" required />
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Workshop</button>
        </div>
      </form>
    </div>
  </div>
</div>


<!-- EDIT Modal -->
<div class="modal fade" id="editWorkshopModal" tabindex="-1" aria-labelledby="editWorkshopLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <form id="editWorkshopForm">
        <div class="modal-header">
          <h5 class="modal-title" id="editWorkshopLabel">Edit Workshop</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="edit_id" name="id" />
          <div class="row g-3">
            <div class="col-md-6">
              <label for="edit_name" class="form-label">Workshop Name</label>
              <input type="text" class="form-control" id="edit_name" name="name" required />
            </div>
            <div class="col-md-6">
              <label for="edit_ownername" class="form-label">Owner Name</label>
              <input type="text" class="form-control" id="edit_ownername" name="ownername" required />
            </div>
            <div class="col-md-6">
              <label for="edit_email" class="form-label">Owner Email</label>
              <input type="email" class="form-control" id="edit_email" name="email" required />
            </div>
            <div class="col-md-6">
              <label for="edit_city" class="form-label">City</label>
              <input type="text" class="form-control" id="edit_city" name="city" required />
            </div>
            <div class="col-md-6">
              <label for="edit_state" class="form-label">State</label>
              <input type="text" class="form-control" id="edit_state" name="state" required />
            </div>
            <div class="col-md-6">
              <label for="edit_phone" class="form-label">Phone</label>
              <input type="tel" class="form-control" id="edit_phone" name="phone" required />
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Update Workshop</button>
        </div>
      </form>
    </div>
  </div>
</div>



<script>
  const editModal = document.getElementById("editWorkshopModal");
  editModal.addEventListener("show.bs.modal", function (event) {
    const button = event.relatedTarget;
    const id = button.getAttribute("data-id");
    const name = button.getAttribute("data-name");
    const ownername = button.getAttribute("data-ownername");
    const email = button.getAttribute("data-email");
    const city = button.getAttribute("data-city");
    const state = button.getAttribute("data-state");
    const phone = button.getAttribute("data-phone");

    document.getElementById("edit_id").value = id;
    document.getElementById("edit_name").value = name;
    document.getElementById("edit_ownername").value = ownername;
    document.getElementById("edit_email").value = email;
    document.getElementById("edit_city").value = city;
    document.getElementById("edit_state").value = state;
    document.getElementById("edit_phone").value = phone;
  });

  const addForm = document.getElementById("addWorkshopForm");

  addForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(addForm);
    const data = Object.fromEntries(formData.entries());

    try {
      const response = await fetch("/superadmin/workshops", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (response.ok) {
        Swal.fire({
          icon: "success",
          title: "Added!",
          text: result.message,
          timer: 2000,
          showConfirmButton: false,
        }).then(() => {
          
          location.reload();
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: result.message || "Failed to add workshop",
        });
      }
    } catch (error) {
      Swal.fire({
        icon: "error",
        title: "Server Error",
        text: "Something went wrong! Try again.",
      });
    }
  });

  document
    .getElementById("editWorkshopForm")
    .addEventListener("submit", async (e) => {
      e.preventDefault();

      const form = e.target;
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      const workshopId = data.id;

      try {
        const response = await fetch(`/superadmin/workshops/${workshopId}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (result.success) {
          Swal.fire({
            icon: "success",
            title: "Updated!",
            text: result.message,
            timer: 2000,
            showConfirmButton: false,
          });

         
          const modal = bootstrap.Modal.getInstance(
            document.getElementById("editWorkshopModal")
          );
          modal.hide();

          
          setTimeout(() => location.reload(), 2000);
        } else {
          Swal.fire({
            icon: "error",
            title: "Failed",
            text: result.message,
          });
        }
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Something went wrong! Try again.",
        });
      }
    });

  async function deleteWorkshop(id) {
    Swal.fire({
      title: "Are you sure?",
      text: "This will permanently delete the workshop!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, delete it!",
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const response = await fetch(`/superadmin/workshops/${id}`, {
            method: "DELETE",
          });
          const result = await response.json();

          if (result.success) {
            Swal.fire({
              title: "Deleted!",
              text: result.message,
              icon: "success",
            }).then(() => {
              location.reload(); 
            });
          } else {
            Swal.fire("Error", result.message, "error");
          }
        } catch (error) {
          Swal.fire("Server Error", "Something went wrong!", "error");
        }
      }
    });
  }

  document.querySelectorAll(".toggle-block-btn").forEach((btn) => {
    btn.addEventListener("click", async () => {
      const id = btn.getAttribute("data-id");
      const action = btn.getAttribute("data-status"); 

      const confirm = await Swal.fire({
        title: `Are you sure?`,
        text: `This will ${action} the workshop.`,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: `Yes, ${action} it!`,
      });

      if (confirm.isConfirmed) {
        try {
          const response = await fetch(
            `/superadmin/workshops/${id}/${action}`,
            {
              method: "PUT",
              headers: { "Content-Type": "application/json" },
            }
          );
          const result = await response.json();

          if (result.success) {
            Swal.fire({
              icon: "success",
              title: `Workshop ${action}ed!`,
              text: result.message,
              timer: 1500,
              showConfirmButton: false,
            });

            
            if (action === "block") {
              btn.textContent = "Unblock";
              btn.classList.remove("btn-secondary");
              btn.classList.add("btn-success");
              btn.setAttribute("data-status", "unblock");
            } else {
              btn.textContent = "Block";
              btn.classList.remove("btn-success");
              btn.classList.add("btn-secondary");
              btn.setAttribute("data-status", "block");
            }
          } else {
            Swal.fire("Error", result.message, "error");
          }
        } catch (err) {
          Swal.fire("Server Error", "Something went wrong!", "error");
        }
      }
    });
  });

  document.getElementById("logoutBtn").addEventListener("click", async () => {
   
    const confirmLogout = await Swal.fire({
      title: "Are you sure?",
      text: "You will be logged out of your account.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, log out",
    });

    if (confirmLogout.isConfirmed) {
      try {
        const response = await fetch("/superadmin/logout", {
          method: "POST",
          credentials: "include", 
        });

        const result = await response.json();

        if (result.success) {
          Swal.fire({
            icon: "success",
            title: "Logged out",
            text: result.message,
            timer: 1500,
            showConfirmButton: false,
          }).then(() => {
            window.location.href = "/superadmin/login"; // redirect
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: result.message,
          });
        }
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Logout failed",
          text: "Something went wrong!",
        });
      }
    }
  });
</script>