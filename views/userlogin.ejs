<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Login</title>
  
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    body {
      background-color: #f3f4f6;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }
    .login-card {
      background: #fff;
      border-radius: 16px;
      box-shadow: 0px 6px 20px rgba(0,0,0,0.1);
      padding: 40px;
      width: 100%;
      max-width: 420px;
      text-align: center;
    }
    .login-card h2 {
      font-weight: 700;
      margin-bottom: 10px;
    }
    .login-card p {
      color: #6b7280;
      margin-bottom: 25px;
    }
    .form-control {
      border-radius: 10px;
      padding: 12px;
      font-size: 15px;
    }
    .btn-primary {
      border-radius: 10px;
      padding: 12px;
      font-weight: 600;
      background: linear-gradient(90deg, #4f46e5, #3b82f6);
      border: none;
    }
    .btn-primary:hover {
      background: linear-gradient(90deg, #4338ca, #2563eb);
    }
    .error {
      color: red;
      font-size: 13px;
      margin-top: 5px;
      text-align: left;
    }
  </style>
</head>
<body>
  <div class="login-card">
    <div class="d-flex justify-content-center align-items-center mb-3">
    <i class="bi bi-wrench-adjustable-circle-fill fs-3 text-primary me-2 fs-1"></i>
    <span class="fs-2 fw-bold">AutoOps</span>
    </div>
    <p>Enter your email to receive an OTP</p>

    <!-- Step 1: Email Form -->
    <form id="emailForm" novalidate autocomplete="off">
      <div class="mb-3 text-start">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" placeholder="Enter your email" required>
        <div id="emailError" class="error"></div>
      </div>
      <button type="submit" class="btn btn-primary w-100">Send OTP</button>
    </form>
  </div>

  <!-- OTP Modal -->
  <div class="modal fade" id="otpModal" tabindex="-1" aria-labelledby="otpModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content p-4">
        <h5 class="modal-title mb-3 text-center" id="otpModalLabel">Enter OTP</h5>
        <form id="otpForm">
          <input type="hidden" id="modalEmail">
          <div class="mb-3">
            <input type="text" class="form-control text-center" id="otpInput" placeholder="Enter OTP" maxlength="6" required>
            <div id="otpError" class="error"></div>
          </div>
          <button type="submit" class="btn btn-primary w-100">Verify OTP</button>
        </form>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const emailForm = document.getElementById("emailForm");
    const emailInput = document.getElementById("email");
    const emailError = document.getElementById("emailError");
    const otpForm = document.getElementById("otpForm");
    const otpInput = document.getElementById("otpInput");
    const otpError = document.getElementById("otpError");
    const modalEmail = document.getElementById("modalEmail");
    const otpModal = new bootstrap.Modal(document.getElementById("otpModal"));

    // Step 1: Send OTP
    emailForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      emailError.textContent = "";
      const email = emailInput.value.trim();

      if (!email) {
        emailError.textContent = "Email is required";
        return;
      }

      try {
        const res = await fetch("/user/login/sendOtp", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await res.json();

        if (!data.success) {
          emailError.textContent = data.message;
        } else {
          modalEmail.value = email;
          otpModal.show();
        }
      } catch (err) {
        emailError.textContent = "Error sending OTP";
      }
    });

    // Step 2: Verify OTP
    otpForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      otpError.textContent = "";

      const email = modalEmail.value;
      const otp = otpInput.value.trim();

      if (!otp) {
        otpError.textContent = "OTP is required";
        return;
      }

      try {
        const res = await fetch("/user/login/verifyOtp", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email, otp }),
        });
        const data = await res.json();
        console.log(data)
        if (!data.success) {
          otpError.textContent = data.message;
        } else {
          otpModal.hide();
          window.location.href = `/${data.data.role}/dashboard`;
        }
      } catch (err) {
        otpError.textContent = "Error verifying OTP";
      }
    });
  </script>
</body>
</html>
